apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes.yml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: backend
      name: backend
    spec:
      ports:
        - name: "8080"
          port: 8080
          targetPort: 8080
      selector:
        io.kompose.service: backend
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes.yml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: charts-database
      name: charts-database
    spec:
      ports:
        - name: "5432"
          port: 5432
          targetPort: 5432
      selector:
        io.kompose.service: charts-database
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes.yml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: charts-service
      name: charts-service
    spec:
      ports:
        - name: "34567"
          port: 34567
          targetPort: 34567
      selector:
        io.kompose.service: charts-service
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes.yml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: database
      name: database
    spec:
      ports:
        - name: "5432"
          port: 5432
          targetPort: 5432
      selector:
        io.kompose.service: database
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes.yml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: frontend-balancer
      name: frontend-balancer
    spec:
      ports:
        - name: "3000"
          port: 3000
          targetPort: 80
      selector:
        io.kompose.service: frontend-balancer
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes.yml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: frontend1
      name: frontend1
    spec:
      ports:
        - name: "80"
          port: 80
          targetPort: 80
      selector:
        io.kompose.service: frontend1
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes.yml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: frontend2
      name: frontend2
    spec:
      ports:
        - name: "80"
          port: 80
          targetPort: 80
      selector:
        io.kompose.service: frontend2
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes.yml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: posts-database
      name: posts-database
    spec:
      ports:
        - name: "5432"
          port: 5432
          targetPort: 5432
      selector:
        io.kompose.service: posts-database
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes.yml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: posts-service
      name: posts-service
    spec:
      ports:
        - name: "34566"
          port: 34566
          targetPort: 34566
      selector:
        io.kompose.service: posts-service
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes.yml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: whiteboards-database
      name: whiteboards-database
    spec:
      ports:
        - name: "5432"
          port: 5432
          targetPort: 5432
      selector:
        io.kompose.service: whiteboards-database
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes.yml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: whiteboards-service
      name: whiteboards-service
    spec:
      ports:
        - name: "34343"
          port: 34343
          targetPort: 34343
      selector:
        io.kompose.service: whiteboards-service
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes.yml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: backend
      name: backend
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: backend
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o kubernetes.yml
            kompose.version: 1.26.0 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: backend
        spec:
          containers:
            - env:
                - name: IS_CONTAINER
                  value: "1"
                - name: TWATTER_DB_HOST
                  value: database
                - name: TWATTER_DB_PW
                - name: TWATTER_GITHUB_CLIENT_SECRET
                - name: TWATTER_IMGUR_CLIENT_ID
              image: backend
              name: backend
              ports:
                - containerPort: 8080
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes.yml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: charts-database
      name: charts-database
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: charts-database
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o kubernetes.yml
            kompose.version: 1.26.0 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: charts-database
        spec:
          containers:
            - env:
                - name: POSTGRES_PASSWORD
                  value: jizzle
              image: postgres
              name: charts-database
              ports:
                - containerPort: 5432
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes.yml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: charts-service
      name: charts-service
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: charts-service
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o kubernetes.yml
            kompose.version: 1.26.0 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: charts-service
        spec:
          containers:
            - env:
                - name: IS_CONTAINER
                  value: "1"
                - name: TWATTER_DB_HOST
                  value: charts-database
              image: charts-service
              name: charts-service
              ports:
                - containerPort: 34567
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes.yml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: database
      name: database
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: database
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o kubernetes.yml
            kompose.version: 1.26.0 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: database
        spec:
          containers:
            - env:
                - name: POSTGRES_PASSWORD
                  value: jizzle
              image: postgres
              name: database
              ports:
                - containerPort: 5432
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes.yml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: frontend-balancer
      name: frontend-balancer
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: frontend-balancer
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o kubernetes.yml
            kompose.version: 1.26.0 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: frontend-balancer
        spec:
          containers:
            - image: frontend-balancer
              name: frontend-balancer
              ports:
                - containerPort: 80
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes.yml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: frontend1
      name: frontend1
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: frontend1
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o kubernetes.yml
            kompose.version: 1.26.0 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: frontend1
        spec:
          containers:
            - image: frontend1
              name: frontend1
              ports:
                - containerPort: 80
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes.yml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: frontend2
      name: frontend2
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: frontend2
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o kubernetes.yml
            kompose.version: 1.26.0 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: frontend2
        spec:
          containers:
            - image: frontend2
              name: frontend2
              ports:
                - containerPort: 80
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes.yml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: posts-database
      name: posts-database
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: posts-database
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o kubernetes.yml
            kompose.version: 1.26.0 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: posts-database
        spec:
          containers:
            - env:
                - name: POSTGRES_PASSWORD
                  value: jizzle
              image: postgres
              name: posts-database
              ports:
                - containerPort: 5432
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes.yml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: posts-service
      name: posts-service
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: posts-service
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o kubernetes.yml
            kompose.version: 1.26.0 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: posts-service
        spec:
          containers:
            - env:
                - name: IS_CONTAINER
                  value: "1"
                - name: TWATTER_DB_HOST
                  value: posts-database
              image: posts-service
              name: posts-service
              ports:
                - containerPort: 34566
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes.yml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: whiteboards-database
      name: whiteboards-database
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: whiteboards-database
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o kubernetes.yml
            kompose.version: 1.26.0 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: whiteboards-database
        spec:
          containers:
            - env:
                - name: POSTGRES_PASSWORD
                  value: jizzle
              image: postgres
              name: whiteboards-database
              ports:
                - containerPort: 5432
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes.yml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: whiteboards-service
      name: whiteboards-service
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: whiteboards-service
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o kubernetes.yml
            kompose.version: 1.26.0 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: whiteboards-service
        spec:
          containers:
            - env:
                - name: IS_CONTAINER
                  value: "1"
              image: whiteboards-service
              name: whiteboards-service
              ports:
                - containerPort: 34343
              resources: {}
          restartPolicy: Always
    status: {}
kind: List
metadata: {}

